<!--
Xpress Insight vdlx-datagrid
=============================

file examples/calculated-columns.vdl
````````````````````````````````````
(c) Copyright 2023 Fair Isaac Corporation

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<vdl version="5.0">
    <vdl-include src="includes/doc-extensions/code-panel.vdl"></vdl-include>
    <vdl-include src="vdlx-datagrid/vdlx-datagrid.vdl"></vdl-include>
    <vdl-page>
        <vdl-section heading="Calculated Columns">
            <vdl-row>
                <vdl-column size="9">
                    <p class="lead"><span vdl-text="Generate data columns."></span></p>
                    <p><span vdl-text="You can add columns to a datagrid that are not binding to an Insight array. You must specify a "></span><code>render</code><span vdl-text="
                    function for the column to generate the display, sort and filter data.
                    Calculated columns must be part of an existing datagrid that has one or more columns bound to an Insight array, this allows the indices to be generated based on
                    those array entities.
                "></span></p>
                </vdl-column>
            </vdl-row>
            <vdl-row>
                <vdl-column size="7" heading="Calculated columns">
                    <vdlx-datagrid column-filter="true">
                        <vdlx-datagrid-column entity="SupportCosts"></vdlx-datagrid-column>
                        <vdlx-datagrid-column render="=scenario.entities.ServiceLevelAgreements([rowData[0]]).value" class="numeric">
                            ServiceLevelAgreements
                        </vdlx-datagrid-column>
                        <vdlx-datagrid-column render="=scenario.entities.ServiceLevelAgreements([rowData[0]]).value * 2 + ''" class="numeric">
                            ServiceLevelAgreements * 2
                        </vdlx-datagrid-column>
                    </vdlx-datagrid>
                </vdl-column>
                <vdl-column heading="VDL source:" size="5">
                    <code-panel>
&lt;vdlx-datagrid column-filter=&quot;true&quot;&gt;
    &lt;vdlx-datagrid-column entity=&quot;SupportCosts&quot;&gt;&lt;/vdlx-datagrid-column&gt;
    &lt;vdlx-datagrid-column render=&quot;=scenario.entities.ServiceLevelAgreements([rowData[0]]).value&quot; class=&quot;numeric&quot;&gt;
        ServiceLevelAgreements
    &lt;/vdlx-datagrid-column&gt;
    &lt;vdlx-datagrid-column render=&quot;=scenario.entities.ServiceLevelAgreements([rowData[0]]).value * 2 + &#39;&#39;&quot; class=&quot;numeric&quot;&gt;
        ServiceLevelAgreements * 2
    &lt;/vdlx-datagrid-column&gt;
&lt;/vdlx-datagrid&gt;
                    </code-panel>
                </vdl-column>
            </vdl-row>
        </vdl-section>
        <vdl-section heading="Calculated columns as lookup columns">
            <vdl-row>
                <vdl-column size="9">
                    <p><span vdl-text="This example displays one Mosel array and adds calculated columns in between the indices.
                    The calculated columns look up the country for destination and origin for each row. It also includes an export
                    button. The exported CSV file will include the display values from the calculated cells and it will be in the same
                    order as the datagrid at time of export."></span></p>
                </vdl-column>
            </vdl-row>
            <vdl-row>
                <vdl-column size="7" heading="Look up of index columns">
                    <vdlx-datagrid show-export="true" export-filename="origin_dest_amounts">
                        <vdlx-datagrid-column set="CITIES" set-position="0" sort-order="0">Origin</vdlx-datagrid-column>
                        <!-- Lookup country for the origin city -->
                        <vdlx-datagrid-column render="=scenario.entities.mapCity2Ctry(rowData[0]).value">Ctry of orig
                        </vdlx-datagrid-column>
                        <vdlx-datagrid-column set="CITIES" set-position="1" sort-order="1">Destination</vdlx-datagrid-column>
                        <!-- Lookup country for the destination city -->
                        <vdlx-datagrid-column render="=scenario.entities.mapCity2Ctry(rowData[1]).value">Ctry of dest</vdlx-datagrid-column>
                        <vdlx-datagrid-column set="PERIODS" heading="Periods" position="" sort-order="2"></vdlx-datagrid-column>
                        <vdlx-datagrid-column entity="amount" heading="Amount" editable="true"></vdlx-datagrid-column>
                    </vdlx-datagrid>
                </vdl-column>
                <vdl-column heading="VDL source:" size="5">
                    <code-panel>
&lt;vdlx-datagrid show-export=&quot;true&quot; export-filename=&quot;origin_dest_amounts&quot;&gt;
    &lt;vdlx-datagrid-column set=&quot;CITIES&quot; set-position=&quot;0&quot; sort-order=&quot;0&quot;&gt;Origin&lt;/vdlx-datagrid-column&gt;
    &lt;!-- Lookup country for the origin city --&gt;
    &lt;vdlx-datagrid-column render=&quot;=scenario.entities.mapCity2Ctry(rowData[0]).value&quot;&gt;Ctry of orig
    &lt;/vdlx-datagrid-column&gt;
    &lt;vdlx-datagrid-column set=&quot;CITIES&quot; set-position=&quot;1&quot; sort-order=&quot;1&quot;&gt;Destination&lt;/vdlx-datagrid-column&gt;
    &lt;!-- Lookup country for the destination city --&gt;
    &lt;vdlx-datagrid-column render=&quot;=scenario.entities.mapCity2Ctry(rowData[1]).value&quot;&gt;Ctry of dest&lt;/vdlx-datagrid-column&gt;
    &lt;vdlx-datagrid-column set=&quot;PERIODS&quot; heading=&quot;Periods&quot; position=&quot;&quot; sort-order=&quot;2&quot;&gt;&lt;/vdlx-datagrid-column&gt;
    &lt;vdlx-datagrid-column entity=&quot;amount&quot; heading=&quot;Amount&quot; editable=&quot;true&quot;&gt;&lt;/vdlx-datagrid-column&gt;
&lt;/vdlx-datagrid&gt;
                    </code-panel>
                </vdl-column>
            </vdl-row>
        </vdl-section>


        <vdl-section heading="Calculated columns as lookup columns combined with reordering of index columns">
            <vdl-row>
                <vdl-column size="9">
                    <p><span vdl-text="This example moves the PERIODS index as the first column and sorts by PERIODS, Destination, Origin.
                    It also includes a lookup column for Distance based on CITIES (origin) and CITIES (destination) and applies number
                    formatting to the value."></span></p>
                </vdl-column>
            </vdl-row>
            <vdl-row>
                <vdl-column size="7" heading="Calculated columns with reordered index columns">
                    <vdlx-datagrid>
                        <vdlx-datagrid-column set="PERIODS" heading="Periods" sort-order="2"></vdlx-datagrid-column>
                        <vdlx-datagrid-column set="CITIES" set-position="1" sort-order="1">Destination</vdlx-datagrid-column>
                        <vdlx-datagrid-column render="=scenario.entities.mapCity2Ctry(rowData[1]).value">Ctry of dest</vdlx-datagrid-column>
                        <vdlx-datagrid-column set="CITIES" set-position="0" sort-order="0">Origin</vdlx-datagrid-column>
                        <vdlx-datagrid-column render="=scenario.entities.mapCity2Ctry(rowData[0]).value">Ctry of orig</vdlx-datagrid-column>
                        <vdlx-datagrid-column render="=insight.Formatter.formatNumber(scenario.entities.distance(rowData[0],rowData[1]).value, '#,###.##')">Distance</vdlx-datagrid-column>
                        <vdlx-datagrid-column entity="amount" heading="Amount" editable="true"></vdlx-datagrid-column>
                    </vdlx-datagrid>
                </vdl-column>
                <vdl-column heading="VDL source:" size="5">
                    <code-panel>
&lt;vdlx-datagrid&gt;
    &lt;vdlx-datagrid-column set=&quot;PERIODS&quot; heading=&quot;Periods&quot; sort-order=&quot;2&quot;&gt;&lt;/vdlx-datagrid-column&gt;
    &lt;vdlx-datagrid-column set=&quot;CITIES&quot; set-position=&quot;1&quot; sort-order=&quot;1&quot;&gt;Destination&lt;/vdlx-datagrid-column&gt;
    &lt;vdlx-datagrid-column render=&quot;=scenario.entities.mapCity2Ctry(rowData[1]).value&quot;&gt;Ctry of dest&lt;/vdlx-datagrid-column&gt;
    &lt;vdlx-datagrid-column set=&quot;CITIES&quot; set-position=&quot;0&quot; sort-order=&quot;0&quot;&gt;Origin&lt;/vdlx-datagrid-column&gt;
    &lt;vdlx-datagrid-column render=&quot;=scenario.entities.mapCity2Ctry(rowData[0]).value&quot;&gt;Ctry of orig&lt;/vdlx-datagrid-column&gt;
    &lt;vdlx-datagrid-column render=&quot;=insight.Formatter.formatNumber(scenario.entities.distance(rowData[0],rowData[1]).value, '#,###.##')&quot;&gt;Distance&lt;/vdlx-datagrid-column&gt;
    &lt;vdlx-datagrid-column entity=&quot;amount&quot; heading=&quot;Amount&quot; editable=&quot;true&quot;&gt;&lt;/vdlx-datagrid-column&gt;
&lt;/vdlx-datagrid&gt;
                    </code-panel>
                </vdl-column>
            </vdl-row>
        </vdl-section>
    </vdl-page>
</vdl>