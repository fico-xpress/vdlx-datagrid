<!--
Xpress Insight vdlx-datagrid
=============================

file examples/sorting.vdl
```````````````````````
(c) Copyright 2023 Fair Isaac Corporation

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<vdl version="5.0">
    <vdl-include src="includes/doc-extensions/code-panel.vdl"></vdl-include>
    <vdl-include src="vdlx-datagrid/vdlx-datagrid.vdl"></vdl-include>

    <vdl-page>
        <vdl-section heading="Default index sorting">
            <vdl-row>
                <vdl-column>
                    <p>
                        By default the index columns of a <code>vdlx-datagrid</code> will be sorted in ascending order.
                        They will also have any <code>vdl-set-sorters</code> automatically applied to them. This can be
                        disabled per <code>vdlx-datagrid-column</code> by setting
                        <code>disable-set-sorting="true"</code>.
                    </p>
                    <p>
                        In the example below the Factories will be sorted using the registered custom comparator that
                        defines the order of the catagories. "Months of the year" will be sorted using the built-in
                        "months" sorter as configured.
                    </p>
                </vdl-column>
            </vdl-row>
            <vdl-row>
                <vdl-column size="6">
                    <vdl-set-sorter set="Factories" comparator="=['Peckham', 'New York', 'Paris']"></vdl-set-sorter>
                    <vdl-set-sorter set="MonthsOfYear" comparator="months"></vdl-set-sorter>

                    <vdlx-datagrid page-size="10">
                        <vdlx-datagrid-column entity="FactorySupply"></vdlx-datagrid-column>
                    </vdlx-datagrid>
                </vdl-column>
                <vdl-column heading="VDL source:" size="6">
                    <code-panel>
&lt;vdl-set-sorter set=&quot;Factories&quot; comparator=&quot;=['Peckham', 'New York', 'Paris']&quot;&gt;&lt;/vdl-set-sorter&gt;
&lt;vdl-set-sorter set=&quot;MonthsOfYear&quot; comparator=&quot;months&quot;&gt;&lt;/vdl-set-sorter&gt;

&lt;vdlx-datagrid page-size=&quot;10&quot;&gt;
    &lt;vdlx-datagrid-column entity=&quot;FactorySupply&quot;&gt;&lt;/vdlx-datagrid-column&gt;
&lt;/vdlx-datagrid&gt;
                    </code-panel>
                </vdl-column>
            </vdl-row>
        </vdl-section>

        <vdl-section heading="Custom sorting of column data">
            <vdl-row>
                <vdl-column size="6">
                    <p>
                        You can modify the sort order of data within any column by setting <code>sort-by-formatted="true"</code>
                        on the <code>vdlx-datagrid-column</code> and providing a custom <code>render</code> expression
                        or function that handles <code>type === 'sort'</code>.
                    </p>
                </vdl-column>
            </vdl-row>
            <vdl-row>
                <vdl-column size="6">
                    <script>
                        var SUPPORT_LEVEL_NAMES = ['Bronze', 'Silver', 'Gold'];

                        function supportLevelNamesSort(value, type) {
                            if (type === 'sort') {
                                return SUPPORT_LEVEL_NAMES.indexOf(value);
                            }
                            return value;
                        }
                    </script>
                    <vdlx-datagrid save-state="false">
                        <vdlx-datagrid-column entity="SupportLevelNames" sort-by-formatted="true"
                                              render="=supportLevelNamesSort"
                                              sort-order="0" sort-direction="desc"></vdlx-datagrid-column>
                    </vdlx-datagrid>
                </vdl-column>
                <vdl-column heading="VDL source:" size="6">
                    <code-panel>
&lt;script&gt;
    var SUPPORT_LEVEL_NAMES = ['Bronze', 'Silver', 'Gold'];

    function supportLevelNamesSort(value, type) {
        if (type === 'sort') {
            return SUPPORT_LEVEL_NAMES.indexOf(value);
        }
        return value;
    }
&lt;/script&gt;
&lt;vdlx-datagrid save-state=&quot;false&quot;&gt;
    &lt;vdlx-datagrid-column entity=&quot;SupportLevelNames&quot; sort-by-formatted=&quot;true&quot;
                          render=&quot;=supportLevelNamesSort&quot;
                          sort-order=&quot;0&quot; sort-direction=&quot;desc&quot;&gt;&lt;/vdlx-datagrid-column&gt;
&lt;/vdlx-datagrid&gt;
                    </code-panel>
                </vdl-column>
            </vdl-row>
        </vdl-section>

        <vdl-section heading="Calculated columns sorting">
            <vdl-row>
                <vdl-column size="7">
                    <p>Calculated columns will always behave as if <code>"sort-by-formatted"</code> is enabled, as they
                        do not have
                        any underlying data. When a calculated column is sorted the <code>"render"</code> callback is
                        called
                        for every cell in the column with the <code>type</code> argument set to "sort".</p>
                    <script>
                        function format(value, type) {
                            if (type === 'display') {
                                return insight.Formatter.formatNumber(value, '#,##0.00');
                            }
                            // Sort and filter by the raw number value
                            return value;
                        }
                    </script>
                    <vdlx-datagrid>
                        <vdlx-datagrid-column set="Factories" set-position="0">Origin</vdlx-datagrid-column>
                        <vdlx-datagrid-column set="Factories" set-position="1">Destination</vdlx-datagrid-column>
                        <vdlx-datagrid-column entity="ShippingCosts" format="0.0000"></vdlx-datagrid-column>
                        <vdlx-datagrid-column
                                render="=format(scenario.entities.FactoryCapacities(rowData[0]).value, type)">
                            Origin capacity
                        </vdlx-datagrid-column>
                        <vdlx-datagrid-column
                                render="=format(scenario.entities.FactoryCapacities(rowData[1]).value, type)">
                            Destination capacity
                        </vdlx-datagrid-column>
                    </vdlx-datagrid>
                </vdl-column>
                <vdl-column heading="VDL source:" size="5">
                    <code-panel>
&lt;script&gt;
    function format(value, type) {
        if (type === 'display') {
            return insight.Formatter.formatNumber(value, '#,##0.00');
        }
        // Sort and filter by the raw number value
        return value;
    }
&lt;/script&gt;
&lt;vdlx-datagrid&gt;
    &lt;vdlx-datagrid-column set=&quot;Factories&quot; set-position=&quot;0&quot;&gt;Origin&lt;/vdlx-datagrid-column&gt;
    &lt;vdlx-datagrid-column set=&quot;Factories&quot; set-position=&quot;1&quot;&gt;Destination&lt;/vdlx-datagrid-column&gt;
    &lt;vdlx-datagrid-column entity=&quot;ShippingCosts&quot; format=&quot;0.0000&quot;&gt;&lt;/vdlx-datagrid-column&gt;
    &lt;vdlx-datagrid-column
            render=&quot;=format(scenario.entities.FactoryCapacities(rowData[0]).value, type)&quot;&gt;
        Origin capacity
    &lt;/vdlx-datagrid-column&gt;
    &lt;vdlx-datagrid-column
            render=&quot;=format(scenario.entities.FactoryCapacities(rowData[1]).value, type)&quot;&gt;
        Destination capacity
    &lt;/vdlx-datagrid-column&gt;
&lt;/vdlx-datagrid&gt;
                    </code-panel>
                </vdl-column>
            </vdl-row>
        </vdl-section>

        <vdl-section heading="Column sort order">
            <vdl-row>
                <vdl-column size="6">
                    <p>By default the index columns will be sorted within a <code>vdlx-datagrid</code>. To override the
                        column sort order set the <code>sort-order</code> to a number.</p>
                    <p>It is also possible to set the direction of sorting with <code>"sort-direction"</code> attribute
                        (optional). This attribute can be either set to "desc" or "asc".</p>
                    <p>Note, datagrid stores sorting state between view reloads so if a user has changed the sort order
                        their changes will be preserved. You can prevent this by setting <code>save-state="false"</code>
                        on <code>vdlx-datagrid</code></p>
                    <vdlx-datagrid save-state="false">
                        <vdlx-datagrid-column entity="SupportCosts" sort-order="1"
                                              sort-direction="asc"></vdlx-datagrid-column>
                        <vdlx-datagrid-column entity="ServiceLevelAgreements" sort-order="0"
                                              sort-direction="desc"></vdlx-datagrid-column>
                    </vdlx-datagrid>
                </vdl-column>
                <vdl-column heading="VDL source:" size="6">
                    <code-panel>
&lt;vdlx-datagrid&gt;
    &lt;vdlx-datagrid-column entity=&quot;SupportCosts&quot; sort-order=&quot;1&quot;
                          sort-direction=&quot;asc&quot;&gt;&lt;/vdlx-datagrid-column&gt;
    &lt;vdlx-datagrid-column entity=&quot;ServiceLevelAgreements&quot; sort-order=&quot;0&quot;
                          sort-direction=&quot;desc&quot;&gt;&lt;/vdlx-datagrid-column&gt;
&lt;/vdlx-datagrid&gt;
                    </code-panel>
                </vdl-column>
            </vdl-row>
        </vdl-section>
    </vdl-page>
</vdl>